vertext(1).
vertext(2).
vertext(3).
vertext(4).
vertext(5).
vertext(6).
vertext(7).
vertext(8).

color(red).
color(blue).
color(green).
color(yellow).
color(orange).
color(pink).



edge(1,2).
edge(1,4).
edge(2,3).
edge(2,6).
edge(2,5).
edge(2,4).
edge(2,1).
edge(3,2).
edge(3,6).
edge(4,1).
edge(4,2).
edge(4,5).
edge(4,7).
edge(4,8).
edge(5,2).
edge(5,4).
edge(5,6).
edge(5,7).
edge(6,2).
edge(6,3).
edge(6,7).
edge(7,6).
edge(7,5).
edge(7,8).
edge(8,7).
edge(8,4).
node (placeB, placeE, 73).
node (placeB, placeC, 14).
node (placeC, placeD, 5).
node (placeC, placеH, 24).
node (placeD, placеH, 71).
node (placeE, placeG, 123).
node (placeG, placеH, 20).
node (placeF, placеH, 29).
%: table(path(_,
و و
min)).
path (A, B, [B, A], C) - node (A, B, C).
path (A, B, [B|Ps], Cost) :-
node (C, B, Cost1),
path(A, C, Ps, Cost0),
Cost is Coste + Cost1.
test (Path, Cost) :-
order_by([asc (Cost)],
(path(placeA, placеH, Path, Cost),
reverse (Path, Path) )).


:- module (shortpath, [test/2]).
:- use_module(library(solution_sequences), [order_by/2]).
:- use_module(library (lists), [reverse/2]).
node (placeA, placeB, 11).
node (placeA, placeC, 26).
node (placeA, placeD, 37).
node (placeA, placeE, 13).
node (placeA, placeF, 96).